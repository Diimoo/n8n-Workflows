{
  "name": "Reddit-to-Shorts Automator",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "custom",
              "hour": 9,
              "minute": 0,
              "second": 0
            }
          ]
        }
      },
      "id": "Cron",
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "position": [200, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "https://www.reddit.com/r/AITA/top.json?limit=1&t=day",
        "responseFormat": "json"
      },
      "id": "Fetch Reddit",
      "name": "Fetch Reddit",
      "type": "n8n-nodes-base.httpRequest",
      "position": [400, 200],
      "typeVersion": 2
    },
    {
      "parameters": {
        "functionCode": "const post = $json[\"data\"].children[0].data;\nreturn [{\n  json: {\n    title: post.title,\n    text: post.selftext\n  }\n}];"
      },
      "id": "Extract Text",
      "name": "Extract Text",
      "type": "n8n-nodes-base.function",
      "position": [600, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "http://localhost:11434/api/generate",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {
          "followRedirect": false
        },
        "bodyParametersJson": "{\"model\":\"mistral:instruct\",\"prompt\":\"Schreibe den folgenden Reddit-Post als spannende Kurzgeschichte um:\\n{{$json.text}}\",\"stream\":false}"
      },
      "id": "Rewrite with LLM",
      "name": "Rewrite with LLM",
      "type": "n8n-nodes-base.httpRequest",
      "position": [800, 200],
      "typeVersion": 2
    },
    {
      "parameters": {
        "command": "python3",
        "arguments": [
          "/home/user/voicegen.py",
          "={{$json.response}}"
        ],
        "workingDirectory": ""
      },
      "id": "Generate Voice",
      "name": "Generate Voice",
      "type": "n8n-nodes-base.executeCommand",
      "position": [1000, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "ffmpeg",
        "arguments": [
          "-i",
          "/home/user/videos/minecraft.mp4",
          "-i",
          "/tmp/output.mp3",
          "-shortest",
          "-c:v",
          "libx264",
          "-preset",
          "veryfast",
          "-c:a",
          "aac",
          "-b:a",
          "192k",
          "-y",
          "/tmp/final_video.mp4"
        ],
        "workingDirectory": ""
      },
      "id": "Merge Video",
      "name": "Merge Video",
      "type": "n8n-nodes-base.executeCommand",
      "position": [1200, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "whisper",
        "arguments": [
          "/tmp/output.mp3",
          "--model",
          "medium",
          "--output_format",
          "srt",
          "--output_dir",
          "/tmp"
        ],
        "workingDirectory": ""
      },
      "id": "Create SRT",
      "name": "Create SRT",
      "type": "n8n-nodes-base.executeCommand",
      "position": [1400, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "ffmpeg",
        "arguments": [
          "-i",
          "/tmp/final_video.mp4",
          "-vf",
          "subtitles=/tmp/output.srt",
          "-c:a",
          "copy",
          "-y",
          "/tmp/final_video_sub.mp4"
        ],
        "workingDirectory": ""
      },
      "id": "Burn Subs",
      "name": "Burn Subs",
      "type": "n8n-nodes-base.executeCommand",
      "position": [1600, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filePath": "/tmp/final_video_sub.mp4"
      },
      "id": "Read Video",
      "name": "Read Video",
      "type": "n8n-nodes-base.readBinaryFile",
      "position": [1800, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "uploadVideo",
        "binaryProperty": "data",
        "title": "={{$node[\"Extract Text\"].json[\"title\"]}}",
        "description": "Automatisch generierte Story-Shorts"
      },
      "id": "YouTube Upload",
      "name": "YouTube Upload",
      "type": "n8n-nodes-base.youtube",
      "credentials": {
        "youtubeOAuth2Api": {
          "id": "YOUR_YT_CREDENTIAL_ID",
          "name": "YouTube-Account"
        }
      },
      "position": [2000, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "note": "TikTok Upload hier einf\u00fcgen â€“ entweder Community Node oder HTTP Request mit Content Posting API."
      },
      "id": "TikTok Placeholder",
      "name": "TikTok Placeholder",
      "type": "n8n-nodes-base.stickyNote",
      "position": [2200, 200],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Cron": {
      "main": [
        [
          {
            "node": "Fetch Reddit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Reddit": {
      "main": [
        [
          {
            "node": "Extract Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text": {
      "main": [
        [
          {
            "node": "Rewrite with LLM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite with LLM": {
      "main": [
        [
          {
            "node": "Generate Voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Voice": {
      "main": [
        [
          {
            "node": "Merge Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Video": {
      "main": [
        [
          {
            "node": "Create SRT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create SRT": {
      "main": [
        [
          {
            "node": "Burn Subs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Burn Subs": {
      "main": [
        [
          {
            "node": "Read Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Video": {
      "main": [
        [
          {
            "node": "YouTube Upload",
            "type": "main",
            "index": 0
          },
          {
            "node": "TikTok Placeholder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "timezone": "Europe/Berlin"
  },
  "versionId": "1"
}
